name: Update Azure Storage Quota

on:
  repository_dispatch:
    types: [storage_quota_increase]
  workflow_dispatch:
    inputs:
      current_quota:
        description: 'Current quota in GB'
        required: true
        type: number
        default: 5
      new_quota:
        description: 'New quota in GB'
        required: true
        type: number
        default: 10

env:
  AZURE_RESOURCE_GROUP: rg-container-app-storage-test-50
  AZURE_STORAGE_ACCOUNT: storageautomationsa
  AZURE_FILE_SHARE: container-storage

jobs:
  update-storage-quota:
    runs-on: ubuntu-latest
    name: Update Azure File Share Quota
    
    steps:
    - name: Log workflow trigger
      run: |
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "Triggered by automated monitoring"
          echo "Current quota: ${{ github.event.client_payload.current_quota }}GB"
          echo "New quota: ${{ github.event.client_payload.new_quota }}GB"
          echo "Usage: ${{ github.event.client_payload.usage_percent }}%"
        else
          echo "Triggered manually"
          echo "Current quota: ${{ github.event.inputs.current_quota }}GB"
          echo "New quota: ${{ github.event.inputs.new_quota }}GB"
        fi

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get current storage information
      id: storage_info
      run: |
        echo "Getting current storage information..."
        
        CURRENT_QUOTA=$(az storage share show \
          --name ${{ env.AZURE_FILE_SHARE }} \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --query 'quota' -o tsv)
        
        USAGE_BYTES=$(az storage share stats \
          --name ${{ env.AZURE_FILE_SHARE }} \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --query 'usage' -o tsv)
        
        USAGE_GB=$((USAGE_BYTES / 1024 / 1024 / 1024))
        USAGE_PERCENTAGE=$((USAGE_GB * 100 / CURRENT_QUOTA))
        
        echo "current_quota=$CURRENT_QUOTA" >> $GITHUB_OUTPUT
        echo "usage_gb=$USAGE_GB" >> $GITHUB_OUTPUT
        echo "usage_percentage=$USAGE_PERCENTAGE" >> $GITHUB_OUTPUT
        
        echo "Current quota: ${CURRENT_QUOTA}GB"
        echo "Current usage: ${USAGE_GB}GB (${USAGE_PERCENTAGE}%)"

    - name: Determine new quota
      id: quota_calculation
      run: |
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          NEW_QUOTA="${{ github.event.client_payload.new_quota }}"
        else
          NEW_QUOTA="${{ github.event.inputs.new_quota }}"
        fi
        
        CURRENT_QUOTA="${{ steps.storage_info.outputs.current_quota }}"
        
        if [ "$NEW_QUOTA" -le "$CURRENT_QUOTA" ]; then
          echo "Error: New quota ($NEW_QUOTA GB) must be larger than current quota ($CURRENT_QUOTA GB)"
          exit 1
        fi
        
        echo "new_quota=$NEW_QUOTA" >> $GITHUB_OUTPUT
        echo "Validated new quota: ${NEW_QUOTA}GB"

    - name: Update storage quota
      run: |
        echo "Updating storage quota from ${{ steps.storage_info.outputs.current_quota }}GB to ${{ steps.quota_calculation.outputs.new_quota }}GB"
        
        az storage share update \
          --name ${{ env.AZURE_FILE_SHARE }} \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --quota ${{ steps.quota_calculation.outputs.new_quota }}

    - name: Verify quota update
      run: |
        echo "Verifying quota update..."
        sleep 5
        
        UPDATED_QUOTA=$(az storage share show \
          --name ${{ env.AZURE_FILE_SHARE }} \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --query 'quota' -o tsv)
        
        echo "Updated quota: ${UPDATED_QUOTA}GB"
        
        if [ "$UPDATED_QUOTA" != "${{ steps.quota_calculation.outputs.new_quota }}" ]; then
          echo "ERROR: Quota update failed!"
          exit 1
        fi
        
        echo "âœ… Quota successfully updated to ${UPDATED_QUOTA}GB"

    - name: Generate summary
      run: |
        echo "## ðŸ“Š Storage Quota Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Before | After |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|---------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Quota** | ${{ steps.storage_info.outputs.current_quota }}GB | ${{ steps.quota_calculation.outputs.new_quota }}GB |" >> $GITHUB_STEP_SUMMARY
        echo "| **Usage** | ${{ steps.storage_info.outputs.usage_gb }}GB (${{ steps.storage_info.outputs.usage_percentage }}%) | ${{ steps.storage_info.outputs.usage_gb }}GB |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… **Status**: Quota successfully updated" >> $GITHUB_STEP_SUMMARY
